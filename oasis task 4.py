# -*- coding: utf-8 -*-
"""3. Red wine quality analysis

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/#fileId=https%3A//storage.googleapis.com/kaggle-colab-exported-notebooks/3-red-wine-quality-analysis-bb8b378d-3363-40cc-8e1e-d2e7cf3e40d4.ipynb%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com/20240806/auto/storage/goog4_request%26X-Goog-Date%3D20240806T091540Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3D29fc8a5ac0a9cbfa1c54005ada6c5530421c54ede4fcfa2a7478443e815ac8272deffcf30e49485b50a2c9f8291694cf4dbfbc6932a6822f1b671f04c38424bd929d4a1cedca7d64b7650d13e70eff2eca801e5457b3dc4cb0545ca5ec23a21cc5fa2ed895b4bc305feee77d92e1a5e94ce6251c54137ac4a3eb10b83ca87c18f59f9a61ebf32a35ff5ad5ebf70ec108dd6d91fc8407613e3a7a5b665bf988549e8a7bbc663387090a8ba1401d95e096419178aa005784e0fc242aa37b98cd3d8ebb9ff20ff8541b953e8161cb0a2e5d335e4ea39e25a16d765f693b56b8a5d0f64061c2d072a17c0bf4101940b71d99217e131f2c4276ece6a1ead7d57d3f5a
"""

# IMPORTANT: RUN THIS CELL IN ORDER TO IMPORT YOUR KAGGLE DATA SOURCES
# TO THE CORRECT LOCATION (/kaggle/input) IN YOUR NOTEBOOK,
# THEN FEEL FREE TO DELETE THIS CELL.
# NOTE: THIS NOTEBOOK ENVIRONMENT DIFFERS FROM KAGGLE'S PYTHON
# ENVIRONMENT SO THERE MAY BE MISSING LIBRARIES USED BY YOUR
# NOTEBOOK.

import os
import sys
from tempfile import NamedTemporaryFile
from urllib.request import urlopen
from urllib.parse import unquote, urlparse
from urllib.error import HTTPError
from zipfile import ZipFile
import tarfile
import shutil

CHUNK_SIZE = 40960
DATA_SOURCE_MAPPING = 'wine-quality-dataset:https%3A%2F%2Fstorage.googleapis.com%2Fkaggle-data-sets%2F1866301%2F3047725%2Fbundle%2Farchive.zip%3FX-Goog-Algorithm%3DGOOG4-RSA-SHA256%26X-Goog-Credential%3Dgcp-kaggle-com%2540kaggle-161607.iam.gserviceaccount.com%252F20240806%252Fauto%252Fstorage%252Fgoog4_request%26X-Goog-Date%3D20240806T091540Z%26X-Goog-Expires%3D259200%26X-Goog-SignedHeaders%3Dhost%26X-Goog-Signature%3D6a2b3596909dfe1a7248939ec06da0450923318f2a619db85697823be3be197396546f6fc66bdcb9939a9552e3d254d1f516b1c8101978d4183b833912a1da04872707aeebb111a0391a6225d124a6fa9fdbd57bb97f064c2f19bf8012a9542b7bb79a08bee7e8085ffd72575e81c43180c0709047e4ad3462aea4a2f35f85bce91a1b08a5e491c3539f045bf44d99c6cdbcf6b9955537487d28c421c5f0d45ac5e7d3345ec9a1eeb2ba931241625439564f57df4ced65d53268d337102502dcd0e936483f189256b73ee38e71c1343ad0db55fd0658df37efe0395c69207085c3a1467107e545ce82c4a20a0415eee5b5e11285ffe7c50eb298129482c91c7e'

KAGGLE_INPUT_PATH='/kaggle/input'
KAGGLE_WORKING_PATH='/kaggle/working'
KAGGLE_SYMLINK='kaggle'

!umount /kaggle/input/ 2> /dev/null
shutil.rmtree('/kaggle/input', ignore_errors=True)
os.makedirs(KAGGLE_INPUT_PATH, 0o777, exist_ok=True)
os.makedirs(KAGGLE_WORKING_PATH, 0o777, exist_ok=True)

try:
  os.symlink(KAGGLE_INPUT_PATH, os.path.join("..", 'input'), target_is_directory=True)
except FileExistsError:
  pass
try:
  os.symlink(KAGGLE_WORKING_PATH, os.path.join("..", 'working'), target_is_directory=True)
except FileExistsError:
  pass

for data_source_mapping in DATA_SOURCE_MAPPING.split(','):
    directory, download_url_encoded = data_source_mapping.split(':')
    download_url = unquote(download_url_encoded)
    filename = urlparse(download_url).path
    destination_path = os.path.join(KAGGLE_INPUT_PATH, directory)
    try:
        with urlopen(download_url) as fileres, NamedTemporaryFile() as tfile:
            total_length = fileres.headers['content-length']
            print(f'Downloading {directory}, {total_length} bytes compressed')
            dl = 0
            data = fileres.read(CHUNK_SIZE)
            while len(data) > 0:
                dl += len(data)
                tfile.write(data)
                done = int(50 * dl / int(total_length))
                sys.stdout.write(f"\r[{'=' * done}{' ' * (50-done)}] {dl} bytes downloaded")
                sys.stdout.flush()
                data = fileres.read(CHUNK_SIZE)
            if filename.endswith('.zip'):
              with ZipFile(tfile) as zfile:
                zfile.extractall(destination_path)
            else:
              with tarfile.open(tfile.name) as tarfile:
                tarfile.extractall(destination_path)
            print(f'\nDownloaded and uncompressed: {directory}')
    except HTTPError as e:
        print(f'Failed to load (likely expired) {download_url} to path {destination_path}')
        continue
    except OSError as e:
        print(f'Failed to load {download_url} to path {destination_path}')
        continue

print('Data source import complete.')

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns

a = pd.read_csv('/kaggle/input/wine-quality-dataset/WineQT.csv')
a.head(20)

a.shape   #rows and columns

a.info()  #information about the dataset

a.describe()   #statistical information about the dataset

a.isnull().sum()    #there are no null values in the dataset

"""****How to add one more column based on wine quality****"""

a['quality'].unique()

a['goodquality'] = [1 if x>= 6 else 0 for x in a['quality']]  #Based on quality parameter now im adding a new column good quality if >= 6 its a good qulity wine and less than that it is 0 bad quality
a.head(10)

"""****How to find last rows of the dataset****"""

a.tail()  #it returns the last 5 rows of the dataset

"""****How to rename the column name if they are lengthy?****"""

a.rename(columns ={'free sulfur dioxide':'free SO2','total sulfur dioxide':'total SO2'},inplace = True)
a          #here the chemical compound formula of sulfur dioxide is SO2 so replaced with inplace to make it permanent

"""****How to drop unwanted row from the dataset****"""

a.drop('Id',inplace = True,axis = 1)   #id row is removed from the dataset
a.head(10)

"""****Data visualization****"""

sns.catplot(x = 'quality', data = a,kind = 'count')  #if the quality values is less then it is bad quality one here we have 6 quality values
plt.show()

plot = plt.figure(figsize =(5,5)) #volatile acidit vs quality
sns.barplot(x = 'quality',y = 'volatile acidity', data = a) #volatile acidity and wine is inversely proportional if Volatile acidity is high quality is low

plot = plt.figure(figsize =(5,5)) #citric acid vs quality   #opoposite to volatile acidity and citric acid is directly propotional to quality
sns.barplot(x = 'quality',y = 'citric acid', data = a)  #if citric acid content is more we get high quality of wine

"""****Correlation heat map between the columns****"""

correlation = a.corr()

plt.figure(figsize=(10,5))
sns.heatmap(correlation,cbar = True,square = True, fmt ='.1f',annot = True,annot_kws ={'size':6},cmap = 'Greens')
plt.show()    #color bar gives how much correlated the values are and format which is 1 floating values , annotation are the values like citric acid,fixed acidity...all and last one color i want is green

"""****This color bar gives how much correlated the values are and -0.6 to -0.2 negative values are with in light color.Goodquality and quality which is 0.8 positively correlated and quality & volatile acid is-0.4 negatively correlated****"""

plt.figure(figsize=(10,6))
sns.regplot(data = a,y= "goodquality",x = "quality", color = "c").set(title ="Quality Vs Goodquality positive correlation")

"""The regression line is gradually increasing and in one direction,if the quality increases good quality parameter increases is a positive correlation

****Negative correlation****
"""

plt.figure(figsize=(10,6))
sns.regplot(data = a,y= "volatile acidity",x = "quality", color = "c").set(title ="Quality Vs Volatile acidity negative correlation")

"""****Here the point gradually decreases and regression line is downwards so it is a negative correlation****

****Conclusion****

****From the above redwine quality dataset the volatile acidity and wine is inversely proportional,So if the Volatile acidity is high quality is low ****

****citric acid is directly propotional to quality and if the citric acid content is more than quality of wine increases****

****Then i have observed the correlation which the correlated the values are -0.6 to -0.2 negative values are with in light color.Goodquality and quality which is 0.8 positively correlated and quality & volatile acid is-0.4 negatively correlated****

****In positive correlation the regression line is gradually increasing in one direction,if the quality increases good quality parameter increases is a positive correlation****

****In negative correlation the regression line is downwards as volatile acidity is high quality will be low****
"""